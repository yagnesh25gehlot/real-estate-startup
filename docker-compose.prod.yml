version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: property_platform_db_prod
    environment:
      POSTGRES_DB: property_platform
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "127.0.0.1:5432:5432"  # Only allow local connections
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - property_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: property_platform_backend_prod
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/property_platform
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - MAILGUN_API_KEY=${MAILGUN_API_KEY}
      - MAILGUN_DOMAIN=${MAILGUN_DOMAIN}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - TEST_USER_PASSWORD=${TEST_USER_PASSWORD}
    ports:
      - "127.0.0.1:3001:3001"  # Only allow local connections
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads:ro  # Read-only access to uploads
    networks:
      - property_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: property_platform_frontend_prod
    environment:
      - VITE_API_URL=${FRONTEND_URL}
      - VITE_GOOGLE_CLIENT_ID=${VITE_GOOGLE_CLIENT_ID}
      - VITE_STRIPE_PUBLISHABLE_KEY=${VITE_STRIPE_PUBLISHABLE_KEY}
    ports:
      - "127.0.0.1:80:80"
      - "127.0.0.1:443:443"
    depends_on:
      - backend
    networks:
      - property_network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp

  nginx:
    image: nginx:alpine
    container_name: property_platform_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./uploads:/var/www/uploads:ro
    depends_on:
      - frontend
      - backend
    networks:
      - property_network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

volumes:
  postgres_data:
    driver: local

networks:
  property_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
